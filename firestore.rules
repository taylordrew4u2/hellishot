rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Time Blocks - Read access for all, write for authenticated users only
    match /timeBlocks/{blockId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Bookings - Read access for all, create for all (with validation), update/delete for authenticated only
    match /bookings/{bookingId} {
      allow read: if true;
      allow create: if request.resource.data.keys().hasAll(['blockId', 'name', 'performanceType', 'slotNumber', 'performanceFee', 'videoOption', 'totalAmount', 'paymentMethod', 'paymentStatus'])
                    && request.resource.data.name is string
                    && request.resource.data.name.size() > 0
                    && request.resource.data.performanceType in ['Comedy', 'Music', 'Dance', 'Poetry', 'Karaoke']
                    && request.resource.data.paymentMethod in ['Venmo', 'CashApp', 'ApplePay', 'Cash']
                    && request.resource.data.totalAmount >= 3;
      allow update, delete: if request.auth != null;
    }

    // Event Config - Read for all, write for authenticated users only
    match /eventConfig/{configId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}
